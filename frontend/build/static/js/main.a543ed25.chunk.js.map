{"version":3,"sources":["api/testing.js","api/apiRequest.js","components/Post/NewPost.js","api/helper.js","components/Post/PostCardItem.js","components/Post/PostCard.js","components/Home/Home.js","components/Signup/SignUp.js","components/Login/Login.js","components/Navbar/NavigationBar.js","components/Profile/Profile.js","components/ErrorPage.js","components/Post/PostPage.js","components/Profile/ProfileSetup.js","App.js","reportWebVitals.js","index.js"],"names":["rand","max","Math","floor","random","randWord","wordList","length","randString","spaces","period","str","i","randImg","images","createRandPost","id","topics","content","postType","post_id","post_topic","post_type","user_id","post_is_anonymous","post_title","post_content","post_time","start","Date","now","newHr","getHours","newMin","getMinutes","setHours","setMinutes","randDate","post_score","allPosts","getRandPosts","_callee","res","regenerator_default","a","wrap","_context","prev","next","push","abrupt","stop","_callee2","_context2","_callee3","_context3","console","log","_callee5","_context5","_callee6","post","_context6","incrementScore","offset","_callee7","_context7","_callee8","_context8","errorMessage","title","type","text","topic","message","label","localeCompare","substring","NewPost","props","_useState","useState","_useState2","Object","slicedToArray","show","setShow","_React$useState","React","_React$useState2","error","setError","_React$useState3","_React$useState4","checked","setChecked","_React$useState5","_React$useState6","setTitle","_React$useState7","_React$useState8","image","setImage","_React$useState9","_React$useState10","setText","_React$useState11","_React$useState12","setType","_React$useState13","_React$useState14","setTopic","react_default","createElement","Fragment","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Row","react_select_esm","value","options","onChange","ev","__isNew__","placeholder","formatOptionLabel","_ref","Col","target","selected","disabled","hidden","name","style","width","maxLength","rows","cols","height","maxlength","URL","createObjectURL","files","Image","src","Footer","makePost","then","getPosts","getRelativeTime","date","time","unit","secDiff","getSeconds","minDiff","hrDiff","monthDiff","getMonth","yearDiff","getFullYear","PostCardTitle","textAlign","textDecoration","as","Link","to","pathname","concat","query","fontSize","margin","react_router_dom","user","href","PostCardScore","score","setScore","updateScore","getScore","useEffect","xs","IconButton","aria-label","size","upvote","KeyboardArrowUp_default","downvote","KeyboardArrowDown_default","PostCardImg","lg","ms","Ratio","aspectRatio","thumbnail","PostCardItem","ListGroup","Item","className","anon","PostCard","list","setList","postcards","Array","from","postList","map","Post_PostCardItem","key","padding","Home","posts","setPosts","getAllPosts","catch","err","Container","Post_NewPost","Post_PostCard","SignUp","_this","classCallCheck","this","_super","call","state","fields","errors","windows","valid","errormsg","users","JSON","parse","localStorage","getItem","emails","formIsValid","lastAtInd","lastIndexOf","lastDotInd","indexOf","test","setState","errorStr","alert","e","preventDefault","handleValidation","window","location","field","Card","onSubmit","hitSubmit","bind","refs","handleChange","Component","Login","action","NavigationBar","handleClose","Navbar","bg","sticky","Brand","Nav","Paper","component","sx","display","alignItems","InputBase","ml","flex","inputProps","p","Search_default","NavDropdown","align","Divider","esm_Button","axios","defaults","xsrfHeaderName","xsrfCookieName","Profile","_useState3","_useState4","nullUser","profile_name","user_profile_picture","user_bio","user_followers_count","user_following_count","allow_only_followed_users","first_name","last_name","user_email","_useState5","_useState6","setUser","get","usr","data","maxWidth","borderBottom","justifyContent","borderRadius","event","objectSpread2","defineProperty","put","response","alt","ErrorPage","Content","PostPage","nullPost","post_anon","setPost","useParams","navigate","useNavigate","getPost","replace","reload","handleSubmit","ProfileSetup","required","LayoutsWithNavbar","Navbar_NavigationBar","react_router","App","path","element","Home_Home","Profile_Profile","Post_PostPage","components_ErrorPage","Login_Login","SignUp_SignUp","ProfileSetup_ProfileSetup","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a543ed25.chunk.js","sourcesContent":["function rand(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nfunction randWord() {\r\n    const wordList = [\"science\",\"speak\",\"remove\",\"truck\",\"happy\",\"main\",\"broke\",\"calm\",\"alive\",\"wrote\",\r\n    \"act\",\"fox\",\"back\",\"prize\",\"forward\",\"report\",\"over\",\"health\",\"serve\",\"nearer\",\r\n    \"especially\",\"apple\",\"indeed\",\"spent\",\"finally\",\"colony\",\"acres\",\"operation\",\"welcome\",\"walk\",\r\n    \"constantly\",\"social\",\"excellent\",\"shirt\",\"worried\",\"bear\",\"him\",\"model\",\"tip\",\"during\",\r\n    \"twice\",\"suit\",\"factory\",\"film\",\"hurt\",\"neck\",\"education\",\"listen\",\"noon\",\"paid\",\r\n    \"met\",\"production\",\"mainly\",\"system\",\"harbor\",\"vegetable\",\"name\",\"pilot\",\"rise\",\"period\",\r\n    \"forty\",\"ill\",\"how\",\"sudden\",\"plus\",\"typical\",\"pink\",\"across\",\"grandmother\",\"scene\",\r\n    \"mainly\",\"driver\",\"refused\",\"jungle\",\"end\",\"themselves\",\"south\",\"breathing\",\"engineer\",\"sick\",\r\n    \"ourselves\",\"badly\",\"claws\",\"purpose\",\"system\",\"rope\",\"second\",\"having\",\"interior\",\"city\",\r\n    \"signal\",\"here\",\"living\",\"shoulder\",\"according\",\"just\",\"daughter\",\"sail\",\"gray\",\"remarkable\",\r\n    \"valley\",\"choice\",\"cookies\",\"shape\",\"forty\",\"soap\",\"vessels\",\"teach\",\"underline\",\"appearance\",\r\n    \"soft\",\"walk\",\"interior\",\"shelf\",\"able\",\"behavior\",\"without\",\"deep\",\"sad\",\"political\",\r\n    \"saw\",\"diagram\",\"laugh\",\"shall\",\"salt\",\"led\",\"than\",\"flight\",\"knowledge\",\"diagram\",\r\n    \"advice\",\"find\",\"leg\",\"record\",\"position\",\"found\",\"cookies\",\"dance\",\"game\",\"strength\",\r\n    \"mail\",\"ranch\",\"pine\",\"once\",\"tobacco\",\"carefully\",\"value\",\"quick\",\"package\",\"natural\",\r\n    \"toy\",\"divide\",\"include\",\"simply\",\"powder\",\"bare\",\"affect\",\"five\",\"climate\",\"thank\",\r\n    \"naturally\",\"rising\",\"gone\",\"fire\",\"broad\",\"wore\",\"zero\",\"recent\",\"beginning\",\"expression\",\r\n    \"row\",\"wonder\",\"tell\",\"lie\",\"cover\",\"sentence\",\"choice\",\"book\",\"tax\",\"death\",\r\n    \"instead\",\"surrounded\",\"felt\",\"pile\",\"period\",\"suggest\",\"stock\",\"market\",\"only\",\"location\",\r\n    \"each\",\"worth\",\"die\",\"almost\",\"tightly\",\"everyone\",\"correctly\",\"telephone\",\"carefully\",\"dust\",\r\n    \"swimming\",\"reader\",\"atmosphere\",\"brown\",\"nails\",\"thy\",\"willing\",\"idea\",\"storm\",\"war\",\r\n    \"on\",\"say\",\"special\",\"fighting\",\"mistake\",\"prove\",\"between\",\"ready\",\"rose\",\"headed\",\r\n    \"glad\",\"north\",\"complete\",\"repeat\",\"palace\",\"hurried\",\"muscle\",\"swept\",\"house\",\"coming\",\r\n    \"entirely\",\"nervous\",\"partly\",\"such\",\"soldier\",\"coal\",\"band\",\"hungry\",\"solution\",\"hay\",\r\n    \"root\",\"chamber\",\"stay\",\"just\",\"table\",\"sides\",\"entire\",\"paid\",\"present\",\"society\",\r\n    \"produce\",\"smooth\",\"glass\",\"nearer\",\"account\",\"effort\",\"did\",\"fewer\",\"load\",\"function\",\r\n    \"dozen\",\"consist\",\"slipped\",\"map\",\"busy\",\"composition\",\"square\",\"youth\",\"minerals\",\"leaf\",\r\n    \"band\",\"machinery\",\"basket\",\"habit\",\"alone\",\"slept\",\"far\",\"exact\",\"wheat\",\"limited\",\r\n    \"tide\",\"influence\",\"safety\",\"remove\",\"order\",\"product\",\"natural\",\"noon\",\"peace\",\"lift\",\r\n    \"development\",\"dug\",\"remove\",\"condition\",\"shells\",\"further\",\"needs\",\"transportation\",\"even\",\"die\",\r\n    \"report\",\"paper\",\"work\",\"taken\",\"brave\",\"sick\",\"state\",\"sent\",\"tent\",\"forward\"];\r\n\r\n    return wordList[rand(wordList.length)];\r\n}\r\n\r\nfunction randString(max, spaces, period) {\r\n    var str = \"\"\r\n    for (var i = 0; i < max; i++) {\r\n        str += randWord();\r\n\r\n        if (spaces && i < max - 1) {\r\n            str += \" \";\r\n        }\r\n    }\r\n\r\n    if (period) {\r\n        str += \".\"\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction randImg() {\r\n    const tartaglia = \"https://i1.sndcdn.com/artworks-veo6gasHptURSGgN-wpUwfg-t500x500.jpg\"\r\n    const dan = \"https://static.wikia.nocookie.net/valorant/images/1/1a/Epilogue_Dabbing_Dan_Spray.png\"\r\n    const qiqi = \"https://i.imgur.com/OQfRjgN.png\"\r\n    const froge = \"https://i.kym-cdn.com/entries/icons/mobile/000/020/016/wednesdaymydudeswide.jpg\"\r\n\r\n    const images = [tartaglia, dan, qiqi, froge];\r\n\r\n    return images[rand(images.length)];\r\n}\r\n\r\nfunction createRandPost(id) {\r\n    const topics = [\"Pokemon\", \"Plushies\", \"Boba\", \"Purdue\", \"pcmasterrace\", \"Bingsu\", \"Fruit\", \"AskPurcle\", \"Wholesome\", \"Eyebleach\"];\r\n    //types = 0 (text post) or 1 (image post)\r\n    var content = randString(30 + rand(20), true, true)\r\n    var postType = rand(2);\r\n\r\n    if (postType) {\r\n        content = randImg();\r\n    }\r\n\r\n    var randDate = () => {\r\n        var start = new Date(Date.now());\r\n        var newHr = start.getHours() - rand(5) | 0;\r\n        var newMin = start.getMinutes() - rand(30) | 0;\r\n\r\n        start.setHours(newHr);\r\n        start.setMinutes(newMin);\r\n        return start;\r\n    }\r\n\r\n    var newPost = {\r\n        post_id: id,\r\n        post_topic: topics[rand(topics.length)],\r\n        post_type: postType,\r\n        user_id: randString(2 + rand(2), false, false),\r\n        post_is_anonymous: rand(2),\r\n        post_title: randString(3 + rand(3), true, false),\r\n        post_content: content,\r\n        post_time: randDate(),\r\n        post_score: rand(900)\r\n    };\r\n\r\n    return newPost;\r\n}\r\n\r\nfunction createRandUser() {\r\n    /*\r\n    user = models.OneToOneField(User, null=True, on_delete=models.CASCADE)\r\n    profile_name = models.CharField(max_length=100, null=True)\r\n    user_profile_picture = models.ImageField(default='default.jpg', upload_to='profile_images')\r\n    user_bio = models.TextField(max_length=500)\r\n    user_followers_count = models.FloatField(default=0, null=False)\r\n    user_following_count = models.FloatField(default=0, null=False)\r\n    allow_only_followed_users = models.BooleanField(default=False)\r\n    first_name = models.CharField(max_length=50, null=True)\r\n    last_name = models.CharField(max_length=50, null=True)\r\n    user_email = models.CharField(max_length=200, null=False)\r\n    */\r\n\r\n\r\n    var user = {\r\n        profile_name: randString(3, false, false),\r\n        user_profile_picture: randImg(),\r\n        user_bio: randString(15 + rand(10), true, true),\r\n        user_followers_count: rand(500),\r\n        user_following_count: rand(500),\r\n        allow_only_followed_users: rand(2),\r\n        first_name: randWord(),\r\n        last_name: randWord(),\r\n        user_email: randString(3, false, true) + \"com\"\r\n    }\r\n\r\n    return user;\r\n}\r\n\r\nexport { createRandPost, createRandUser };","import { createRandPost, createRandUser } from \"./testing.js\";\r\n\r\nvar allPosts = [];\r\n\r\n/* GET functions */\r\n\r\nfunction getReq() {\r\n    console.log(\"oh\")\r\n}\r\n\r\nasync function getRandPosts() {\r\n    var res = [];\r\n\r\n    for (var i = 0; i < 100; i++) {\r\n        res.push(createRandPost(i));\r\n    }\r\n\r\n    allPosts = res;\r\n\r\n    return res;\r\n}\r\n\r\nasync function getPost(id) {\r\n    return allPosts[id];\r\n}\r\n\r\nasync function getAllPosts() {\r\n    console.log(allPosts);\r\n    return allPosts;\r\n}\r\n\r\nasync function getUser() {\r\n    var user = createRandUser(0);\r\n\r\n    return user;\r\n}\r\n\r\nasync function getScore(id) {\r\n    return allPosts[id].post_score;\r\n}\r\n\r\nfunction databaseLength() {\r\n    return allPosts.length;\r\n}\r\n\r\n/* POST functions */\r\nasync function makePost(post) {\r\n    allPosts.push(post);\r\n}\r\n\r\nfunction incrementScore(id, offset) {\r\n    allPosts[id].post_score += offset;\r\n}\r\n\r\nasync function upvote(id) {\r\n    incrementScore(id, 1);\r\n    //console.log(\"upvoted!\")\r\n}\r\n\r\nasync function downvote(id) {\r\n    incrementScore(id, -1);\r\n    console.log(\"downvoted!\")\r\n}\r\n\r\nexport { getRandPosts, getPost, getAllPosts, getUser, getScore, makePost, databaseLength, upvote, downvote };","import { useState } from \"react\";\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport Creatable from 'react-select/creatable';\r\nimport { Modal, Col, Row, Image } from \"react-bootstrap\";\r\nimport { Button } from '@mui/material';\r\n\r\nimport { makePost, databaseLength, getAllPosts } from \"../../api/apiRequest\";\r\n\r\nfunction errorMessage(title, type, text, topic) {\r\n    let message = \"\";\r\n    if (topic === null || topic.label === null) {\r\n        message = message + \"Please choose topic.\\n\";\r\n    } else if (topic.label.length < 1) {\r\n        message = message + \"Please choose topic.\\n\";\r\n    }\r\n    if (type.localeCompare(\"Image\") !== 0 && type.localeCompare(\"Text\") !== 0) {\r\n        message = message + \"Please choose a post type.\\n\";\r\n    }\r\n    if (title.length === 0) {\r\n        message = message + \"Please insert title.\\n\";\r\n    }\r\n    if (type.localeCompare(\"Text\") === 0 && text.length === 0) {\r\n        message = message + \"Please insert text.\\n\";\r\n    }\r\n    if (type.localeCompare(\"Image\") === 0 && text.length === 0) {\r\n        message = message + \"Please insert image.\\n\";\r\n    } else if (type.localeCompare(\"Image\") === 0 && text.length < 5) {\r\n        message = message + \"Filetype not supported.\\n\";\r\n    } else if (type.localeCompare(\"Image\") === 0\r\n    && text.substring(text.length - 4, text.length).localeCompare(\".png\") !== 0\r\n    && text.substring(text.length - 4, text.length).localeCompare(\".jpg\") !== 0\r\n    && text.substring(text.length - 5, text.length).localeCompare(\".jpeg\") !== 0) {\r\n        message = message + \"Filetype not supported.\\n\";\r\n    }\r\n    return message;\r\n}\r\n\r\nfunction NewPost(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [error, setError] = React.useState(\"\");\r\n\r\n    const handleSubmit = () => {\r\n        if (errorMessage(title, type, text, topic).length === 0) {\r\n            var content;\r\n            if (type == \"Text\") {\r\n                content = text;\r\n            } else {\r\n                content = \"\";\r\n            }\r\n            var newPost = {\r\n                post_id: databaseLength(),\r\n                post_topic: topic,\r\n                post_type: 0,\r\n                user_id: \"user\",\r\n                post_is_anonymous: checked,\r\n                post_title: title,\r\n                post_content: content,\r\n                post_time: new Date(Date.now()),\r\n                post_score: 0\r\n            };\r\n\r\n            makePost(newPost)\r\n            .then((res) => {\r\n                props.getPosts();\r\n                //getAllPosts();\r\n            });\r\n\r\n            setShow(false);\r\n            setTitle(\"\");\r\n            setImage(null);\r\n            setText(\"\");\r\n            setType(\"\");\r\n            setError(\"\");\r\n            setTopic(\"\");\r\n            setChecked(false);\r\n        } else {\r\n            setError(errorMessage(title, type, text, topic));\r\n        }\r\n    }\r\n  \r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setTitle(\"\");\r\n        setImage(null);\r\n        setText(\"\");\r\n        setType(\"\");\r\n        setError(\"\");\r\n        setTopic(\"\");\r\n        setChecked(false);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n    const handleAnonChange = () => {\r\n        setChecked(!checked);\r\n    };\r\n\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const handleTitleChange = ev => {\r\n        setTitle(ev.target.value);\r\n    };\r\n\r\n    const [image, setImage] = React.useState(null);\r\n    const handleImageChange = ev => {\r\n        setImage(URL.createObjectURL(ev.target.files[0]));\r\n        setText(ev.target.value);\r\n    };\r\n\r\n    const [text, setText] = React.useState(\"\");\r\n    const handleTextChange = ev => {\r\n        setText(ev.target.value);\r\n    };\r\n\r\n    const [type, setType] = React.useState(\"\");\r\n    const handleTypeChange = ev => {\r\n        setType(ev.target.value);\r\n        setImage(\"\");\r\n        setText(\"\");\r\n    };\r\n\r\n    const [topic, setTopic] = React.useState(null);\r\n    const handleTopicChange = ev => {\r\n        setTopic(ev);\r\n        if (ev.__isNew__ === true) {\r\n            ev.value = 0;\r\n        }\r\n        //topics.sort(function(a, b){return b.value-a.value});\r\n    }\r\n\r\n    var topics = [\r\n        {label: 'birding', value: 999},\r\n        {label: 'cooking', value: 700},\r\n        {label: 'botany', value: 85},\r\n        {label: 'birds', value: 69},\r\n        {label: 'cs', value: 5},\r\n        {label: 'purdue', value: 1},\r\n    ]\r\n\r\n    const formatOptionLabel = ({ label, value }) => (\r\n        <Row>\r\n            <Col>{label}</Col>\r\n            <Col></Col>\r\n            <Col>{value}</Col>\r\n        </Row>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" onClick={handleShow}>\r\n                Create new post\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>New Post</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Row>\r\n                    <Creatable\r\n                        value={topic}\r\n                        options={topics}\r\n                        onChange={handleTopicChange}\r\n                        placeholder=\"Choose Topic\"\r\n                        formatOptionLabel={formatOptionLabel}\r\n                    />\r\n                    <p></p>\r\n                </Row>\r\n                <Row>\r\n                <Col>\r\n                    <select onChange={handleTypeChange}>                        \r\n                        <option type=\"default\" selected disabled hidden>Choose post type</option>\r\n                        <option type=\"text\">Text</option>\r\n                        <option type=\"image\">Image</option>\r\n                    </select>\r\n                    {' '}\r\n                </Col>\r\n                \r\n                <Col>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <label>\r\n                        Anonymous{' '}\r\n                        <input type=\"checkbox\" \r\n                        checked={checked}\r\n                        onChange={handleAnonChange}/>\r\n                    </label>\r\n                    {' '}\r\n                </Col>\r\n                </Row>\r\n\r\n                <p></p>\r\n                <textarea\r\n                    name=\"title\"\r\n                    placeholder=\" Title\"\r\n                    value={title || \"\"}\r\n                    onChange={handleTitleChange}\r\n                    style={{width: \"465px\"}}\r\n                    maxLength=\"100\"\r\n                    rows={1}\r\n                    cols={5}\r\n                />\r\n                <p></p>\r\n                { \r\n                    type.localeCompare(\"Image\") === 0 || type.localeCompare(\"Text\") === 0 ?\r\n                        type.localeCompare(\"Image\") !== 0 ?\r\n                            <textarea\r\n                                name=\"text\"\r\n                                placeholder=\" Insert text here\"\r\n                                value={text || \"\"}\r\n                                onChange={handleTextChange}                       \r\n                                style={{width: \"465px\", height: \"300px\"}}\r\n                                maxlength=\"500\"\r\n                                rows={5}\r\n                                cols={5}\r\n                            />\r\n                        :\r\n                            <form>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    onChange={handleImageChange}\r\n                                />\r\n                                <p></p>\r\n                                { image.length > 0 ?\r\n                                            <Image\r\n                                                src={image} \r\n                                            />\r\n                                : \"\"}\r\n                                </form>\r\n                    :\r\n                        <p></p>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {/*<Button variant=\"secondary\" onClick={handleClose}>\r\n                Cancel\r\n                </Button> */}\r\n                <p>{error}</p>\r\n                <Button variant=\"primary\" onClick={handleSubmit}>\r\n                Post\r\n                </Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewPost;","function getRelativeTime(date) {\r\n    if (!date) {\r\n        return \"some time ago\";\r\n    }\r\n\r\n    var now = new Date(Date.now());\r\n\r\n    var time = 0;\r\n    var unit = \"\";\r\n\r\n    var secDiff = now.getSeconds() - date.getSeconds();\r\n    if (secDiff > 0) {\r\n        time = secDiff;\r\n        unit = \"second\";\r\n    }\r\n\r\n    var minDiff = now.getMinutes() - date.getMinutes();\r\n    if (minDiff > 0) {\r\n        time = minDiff;\r\n        unit = \"minute\";\r\n    }\r\n    \r\n    var hrDiff = now.getHours() - date.getHours();\r\n    if (hrDiff > 0) {\r\n        time = hrDiff;\r\n        unit = \"hour\";\r\n    }\r\n\r\n    var monthDiff = now.getMonth() - date.getMonth();\r\n    if (monthDiff > 0) {\r\n        time = monthDiff;\r\n        unit = \"month\";\r\n    }\r\n\r\n    var yearDiff = now.getFullYear() - date.getFullYear();\r\n    if (yearDiff > 0) {\r\n        time = yearDiff;\r\n        unit = \"year\"\r\n    }\r\n\r\n    if (time === 0) {\r\n        return \"just now\"\r\n    } else if (time !== 1) {\r\n        unit += \"s\"\r\n    }\r\n\r\n    return time + \" \" + unit + \" ago\";\r\n}\r\n\r\nexport { getRelativeTime };","import { ListGroup, Row, Col, Image, Ratio, Card } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { IconButton } from '@mui/material';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nimport { getScore, upvote, downvote } from \"../../api/apiRequest.js\";\r\nimport { getRelativeTime } from '../../api/helper.js';\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nfunction PostCardTitle(props) {\r\n    \r\n\r\n    return (\r\n        <Col style={{textAlign: \"left\", textDecoration: \"none\"}}  as={Link} to={{pathname: `/post/${props.id}`, query:{id: props.id}}}>\r\n            <h3 style={{fontSize:20}}> {props.title} </h3>\r\n            <p style={{margin: 0}}>\r\n                {\"by \"}\r\n                <Link to=\"/profile\">{props.user}</Link>\r\n                {\" in \"} \r\n                <a href=\"#\">{props.topic}</a> \r\n                {\" \" + getRelativeTime(props.date)}\r\n            </p>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction PostCardScore(props) {\r\n    var [score, setScore] = useState(0);\r\n\r\n    function updateScore(id) {\r\n        getScore(id)\r\n        .then((res) => {\r\n            setScore(res);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateScore(props.id);\r\n    }, []);\r\n\r\n    return (\r\n        <Col xs={1}>\r\n            <IconButton \r\n                aria-label=\"upvote\"\r\n                size=\"small\"\r\n                onClick={ function() {\r\n                    upvote(props.id)\r\n                    .then(() => {\r\n                        updateScore(props.id);\r\n                    });\r\n                }}\r\n            >\r\n                < KeyboardArrowUpIcon />\r\n            </IconButton>\r\n\r\n            <p style={{margin: \"0px\"}}>{score}</p>\r\n\r\n            <IconButton \r\n                aria-label=\"downvote\"\r\n                size=\"small\"\r\n                onClick={ function() {\r\n                    downvote(props.id)\r\n                    .then(() => {\r\n                        updateScore(props.id);\r\n                    });\r\n                }}\r\n            >\r\n                < KeyboardArrowDownIcon />\r\n            </IconButton>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction PostCardImg(props) {\r\n    //if props.type == true, then is image\r\n    if (props.type) {\r\n        return (\r\n            <Col lg={1} ms={2} xs={2}>\r\n                <Ratio aspectRatio=\"1x1\">\r\n                    <Image\r\n                        thumbnail\r\n                        src={props.content} \r\n                    />\r\n                </Ratio>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (null);\r\n    }\r\n}\r\n\r\nfunction PostCardItem(props) {\r\n    const imgSize = 70;\r\n\r\n    /*\r\n        key={post.post_id} \r\n        title={post.post_title}\r\n        content={post.post_content}\r\n        topic={post.post_topic}\r\n        type={post.post_type}\r\n        user={post.user_id}\r\n        anon={post.post_is_anonymous}\r\n        date={post.post_time}\r\n    */\r\n\r\n    return (\r\n        <ListGroup.Item>\r\n            <Row className=\"align-items-center\">\r\n                <PostCardScore \r\n                    score={props.score} \r\n                    id={props.id}\r\n                />\r\n                \r\n                <PostCardImg \r\n                    type={props.type} \r\n                    content={props.content}\r\n                />\r\n                \r\n                <PostCardTitle \r\n                    title={props.title} \r\n                    topic={props.topic} \r\n                    user={props.user} \r\n                    anon={props.anon}\r\n                    date={props.date}\r\n                    id={props.id}\r\n                />                  \r\n            </Row>\r\n        </ListGroup.Item>\r\n    );\r\n}\r\n\r\nexport default PostCardItem;","import { ListGroup } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport PostCardItem from './PostCardItem';\r\n\r\nfunction PostCard(props) {\r\n    const [list, setList] = useState([]);\r\n\r\n    //console.log(props.postList)\r\n    \r\n    useEffect(() => {\r\n        var posts = Array.from(props.postList);\r\n\r\n        var postcards = posts.map((post) => (\r\n            <PostCardItem \r\n                key={post.post_id} \r\n                id={post.post_id}\r\n                title={post.post_title}\r\n                content={post.post_content}\r\n                topic={post.post_topic}\r\n                type={post.post_type}\r\n                user={post.user_id}\r\n                anon={post.post_is_anonymous}\r\n                date={post.post_time}\r\n                score={post.post_score}\r\n            />\r\n        ));\r\n\r\n        setList(postcards);\r\n    }, [props.postList])\r\n\r\n    if (props.postList.length > 0) {\r\n        return (\r\n            <ListGroup style={{padding:\"0px\"}}>\r\n                {list}\r\n            </ListGroup>\r\n        );\r\n    } else {\r\n        return (\r\n            <h2>No posts retrieved :(</h2>\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default PostCard;","import { Container, Row } from 'react-bootstrap';\r\nimport React, { useState, useEffect }  from 'react';\r\nimport NewPost from \"../Post/NewPost.js\";\r\nimport PostCard from '../Post/PostCard';\r\n\r\nimport { Button } from '@mui/material';\r\n\r\nimport { getRandPosts, getAllPosts } from '../../api/apiRequest.js';\r\n\r\nfunction Home() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [posts]);\r\n\r\n    const getPosts = () => {\r\n        getAllPosts()\r\n        .then((res) => {\r\n            setPosts(res);\r\n            console.log(res);\r\n        })\r\n        .catch(err => console.error(`Error: ${err}`));\r\n    }\r\n\r\n    const getNewPosts = () => {\r\n        getRandPosts()\r\n        .then((res) => {\r\n            setPosts(res);\r\n            console.log(res);\r\n        })\r\n        .catch(err => console.error(`Error: ${err}`));\r\n    }\r\n\r\n    return (\r\n        <Container className=\"Home\" style={{padding: \"0px 75px\"}}>\r\n            <Row style={{padding: \"20px 0px\"}}>\r\n                <NewPost getPosts={getPosts}/>\r\n            </Row>\r\n\r\n            <Row>\r\n                <PostCard postList={posts}/> \r\n            </Row>\r\n\r\n            <Button onClick={() => {\r\n                getNewPosts();\r\n            }}>\r\n                reload\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default class SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            windows: {\"error\":false, \"valid\":false},\r\n            errormsg: \"\",\r\n            users: JSON.parse(localStorage.getItem('users')) || [],\r\n            emails: JSON.parse(localStorage.getItem('emails')) || [],\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //email\r\n        if (!fields[\"email\"]) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Email cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n            let lastAtInd = fields[\"email\"].lastIndexOf(\"@\");\r\n            let lastDotInd = fields[\"email\"].lastIndexOf(\".\");\r\n\r\n            if (\r\n                !(\r\n                    lastAtInd < lastDotInd &&\r\n                    lastAtInd > 0 &&\r\n                    fields[\"email\"].indexOf(\"@@\") == -1 &&\r\n                    lastDotInd > 2 &&\r\n                    fields[\"email\"].length - lastDotInd > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                errors[\"email\"] = \"Email is not valid\";\r\n            } //TODO: check for uniqueness\r\n            //else if (this.state.emails.findIndex(fields[\"email\"]) !== -1) {\r\n                //formIsValid = false;\r\n                //errors[\"email\"] = \"Email is already in use\"\r\n            //}\r\n        }\r\n\r\n        //username\r\n        if (!fields[\"username\"]) {\r\n            formIsValid = false;\r\n            errors[\"username\"] = \"Username cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"username\"] !== \"undefined\") {\r\n            if (fields[\"username\"].length < 1) {\r\n                formIsValid = false;\r\n                errors[\"username\"] = \"Username is too short\";\r\n            } else if (fields[\"username\"].length > 20) {\r\n                formIsValid = false;\r\n                errors[\"username\"] = \"Username is too long\";\r\n            } else if (!/^([A-Za-z0-9\\-_.]+)$/.test(fields[\"username\"])) {\r\n                formIsValid = false;\r\n                errors[\"username\"] = \"Username contains invalid characters\";\r\n            } //TODO: check for uniqueness\r\n            //else if (this.state.users.findIndex(fields[\"username\"]) !== -1) {\r\n                //formIsValid = false;\r\n                //errors[\"username\"] = \"Username is already in use\";\r\n            //}\r\n        }\r\n\r\n        //password\r\n        if (!fields[\"password\"]) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Password cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"password\"] !== \"undefined\") {\r\n            if (fields[\"password\"].length < 8) {\r\n                formIsValid = false;\r\n                errors[\"password\"] = \"Password is too short\";\r\n            } else if (fields[\"password\"].length > 50) {\r\n                formIsValid = false;\r\n                errors[\"password\"] = \"Password is too long\";\r\n            } //TODO: handling special characters in passwords like escaped chars\r\n        }\r\n\r\n        if (!fields[\"confirm\"]) {\r\n            formIsValid = false;\r\n            errors[\"comfirm\"] = \"Confirm password cannot be empty\"\r\n        }\r\n\r\n        if (typeof fields[\"password\"] !== \"undefined\" && typeof fields[\"confirm\"] !== \"undefined\") {\r\n            if (fields[\"password\"] !== fields[\"confirm\"]) {\r\n                formIsValid = false;\r\n                errors[\"confirm\"] = \"Passwords do not match\";\r\n            }\r\n        }\r\n        \r\n        this.setState({ errors: errors }, \r\n            function() {\r\n                let errors = this.state.errors;\r\n                let errorStr = \"\";\r\n                for (let error in errors) {\r\n                    errorStr = errorStr + errors[error] + \"\\n\";\r\n                }\r\n\r\n                if (errorStr !== \"\") {\r\n                    alert(errorStr);\r\n                }\r\n            }\r\n        );\r\n        return formIsValid;\r\n    }\r\n\r\n    hitSubmit(e) {\r\n        let errors = this.state.errors;\r\n        e.preventDefault();\r\n\r\n        if (this.handleValidation()) {\r\n            alert(\"Form submitted\");\r\n            /*let emails = this.state.emails;\r\n            let users = this.state.users;\r\n            emails.push(this.state.fields[\"email\"]);\r\n            users.push(this.state.fields[\"username\"]);\r\n            this.setState({ emails: emails, users: users}, \r\n                function() {\r\n                    localStorage.setItem('emails', JSON.stringify(this.state.emails));\r\n                    localStorage.setItem('users', JSON.stringify(this.state.users));\r\n                }\r\n            );*/\r\n            \r\n            window.location.href = \"/profilesetup\";\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SignUp\">\r\n                {/*<Modal show={this.state.windows[\"error\"]} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Error</Modal.Title>\r\n                    </Modal.Header>\r\n                    \r\n                    <Modal.Body> this.state.errormsg </Modal.Body>\r\n                    \r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={handleClose}>\r\n                            Ok\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>*/}\r\n                <Card className=\"SignUpCard\" style={{ width: '18rem'}}>\r\n                    <form onSubmit={this.hitSubmit.bind(this)}>\r\n                        <h3>Sign Up</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>Email address</label>\r\n                            <input refs=\"email\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input refs=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={this.handleChange.bind(this, \"username\")} value={this.state.fields[\"username\"]} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input refs=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={this.handleChange.bind(this, \"password\")} value={this.state.fields[\"password\"]} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input refs=\"confirm\" type=\"password\" className=\"form-control\" placeholder=\"Re-enter password\" onChange={this.handleChange.bind(this, \"confirm\")} value={this.state.fields[\"confirm\"]} />\r\n                        </div>\r\n                        <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n\r\n                        <div className=\"forgot-password\">\r\n                            <p>\r\n                                Already registered? <a href=\"/login\">sign in</a>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <Card className=\"LoginCard\" style={{ width: '18rem'}}>\r\n                    <form>\r\n                        <h3>Login</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>Email address</label>\r\n                            <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                        </div>\r\n                        <form action=\"/\">\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Login\"/>\r\n                        </form>\r\n                        <div className=\"forgot-password\">\r\n                            <p>\r\n                                <a href=\"#\">Forgot Password?</a>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"signup\">\r\n                            <p>\r\n                                No account? <a href=\"/signup\">Sign Up here</a>\r\n                            </p>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Nav } from \"react-bootstrap\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport React from 'react';\r\n\r\nimport { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nimport { InputBase, IconButton, TextField } from \"@mui/material\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport DirectionsIcon from '@mui/icons-material/Directions';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction NavigationBar() {\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\" style={{padding: \"10px 25px\"}}>\r\n\r\n      <Navbar.Brand as={Link} to={\"/\"}>Purcle</Navbar.Brand>\r\n      <Nav className=\"me-auto\">\r\n        <Nav.Link as={Link} to={\"/following\"}>Following</Nav.Link>\r\n        <Nav.Link as={Link} to={\"/messages\"}>Messages</Nav.Link>\r\n      </Nav>\r\n\r\n\r\n      <Paper\r\n        component=\"form\"\r\n        size=\"small\"\r\n        sx={{  display: 'flex', alignItems: 'center'}}\r\n      >\r\n        <InputBase\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Search\"\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          size=\"small\"\r\n        />\r\n        <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n\r\n      </Paper>\r\n\r\n\r\n      <NavDropdown align=\"end\" title=\"Profile\" id=\"collasible-nav-dropdown\" >\r\n        <NavDropdown.Item as={Link} to={\"/profile\"}>Profile</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.1\">Followed Users</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Followed Topics</NavDropdown.Item>\r\n\r\n        <NavDropdown.Divider />\r\n        <>\r\n          <Button variant=\"danger\" onClick={handleShow}>\r\n            Logout\r\n          </Button>\r\n\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Logout</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure you want to logout?</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                No\r\n              </Button>\r\n              <Button variant=\"primary\" as={Link} to={\"/login\"}>\r\n                Yes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      </NavDropdown>\r\n\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nexport default NavigationBar;","import { Container, Row } from 'react-bootstrap';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport PostCard from '../Post/PostCard';\r\nimport { Modal, Col, Image } from \"react-bootstrap\";\r\nimport { Button } from '@mui/material';\r\n\r\nimport { getRandPosts, getUser } from '../../api/apiRequest.js';\r\n\r\nimport axios from 'axios'\r\n\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\n\r\n\r\nfunction Profile(props) {\r\n    \r\n\r\n    const [error, setError] = React.useState(\"\");\r\n\r\n    function errorMessage(bio) {\r\n        console.log(bio)\r\n        let message = \"\";\r\n        if (bio === null || bio.length == 0) {\r\n            message = message + \"Please enter a bio.\\n\";\r\n        }\r\n        return message;\r\n    }\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const nullUser = {\r\n        id: 1,\r\n        profile_name: \"User not found\",\r\n        user_profile_picture: null,\r\n        user_bio: \"null bio\",\r\n        user_followers_count: 0,\r\n        user_following_count: 0,\r\n        allow_only_followed_users: 0,\r\n        first_name: \"null first\",\r\n        last_name: \"null last\",\r\n        user_email: \"null email\"\r\n    }\r\n\r\n    const [user, setUser] = useState(nullUser);\r\n\r\n    /*\r\n        profile_name: randString(3, false, false),\r\n        user_profile_picture: randImg(),\r\n        user_bio: randString(15 + rand(10), true, true),\r\n        user_followers_count: rand(500),\r\n        user_following_count: rand(500),\r\n        allow_only_followed_users: rand(2),\r\n        first_name: randWord(),\r\n        last_name: randWord(),\r\n        user_email: randString(3, false, true) + \"com\"\r\n    */\r\n\r\n\r\n    const handleUpdateUser = (event) => {\r\n        console.log(event.target.name);\r\n        console.log(event.target.value);\r\n        setUser({\r\n            ...user,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    const handleSubmitUpdate = (event) => {\r\n        console.log(\"submit\");\r\n        let err = errorMessage(user.user_bio);\r\n        setError(err);\r\n        if (err == \"\") {\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    const getNewPosts = () => {\r\n        getRandPosts()\r\n            .then((res) => {\r\n                setPosts(res);\r\n            })\r\n            .catch(err => console.error(`Error: ${err}`));\r\n    }\r\n\r\n    const getNewUser = () => {\r\n        getUser()\r\n            .then((res) => {\r\n                setUser(res);\r\n            })\r\n            .catch(err => console.error(`Error: ${err}`));\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    };\r\n\r\n    const getUserApi = () => {\r\n        axios.get('/api/profile/1')\r\n            .then(res => {\r\n                const usr = res.data;\r\n                setUser(usr);\r\n            })\r\n    }\r\n\r\n    const setUserApi = () => {\r\n        axios.put('/api/profile/1', nullUser)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setUser(response.data)\r\n            \r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNewPosts();\r\n        //getNewUser();\r\n        getUserApi();\r\n    }, []);\r\n\r\n    \r\n\r\n    // const [mypics,setPics] = useState([])\r\n    // const {state,dispatch} = useContext(UserContext)\r\n    // const [image,setImage] = useState(\"\")\r\n    // useEffect(()=>{\r\n    //    fetch('/mypost',{\r\n    //        headers:{\r\n    //            \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    //        }\r\n    //    }).then(res=>res.json())\r\n    //    .then(result=>{\r\n    //        console.log(result)\r\n    //        setPics(result.mypost)\r\n    //    })\r\n    // },[])\r\n    // useEffect(()=>{\r\n    //    if(image){\r\n    //     const data = new FormData()\r\n    //     data.append(\"file\",image)\r\n    //     data.append(\"upload_preset\",\"insta-clone\")\r\n    //     data.append(\"cloud_name\",\"cnq\")\r\n    //     fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\",{\r\n    //         method:\"post\",\r\n    //         body:data\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>{\r\n\r\n\r\n    //        fetch('/updatepic',{\r\n    //            method:\"put\",\r\n    //            headers:{\r\n    //                \"Content-Type\":\"application/json\",\r\n    //                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    //            },\r\n    //            body:JSON.stringify({\r\n    //                pic:data.url\r\n    //            })\r\n    //        }).then(res=>res.json())\r\n    //        .then(result=>{\r\n    //            console.log(result)\r\n    //            localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n    //            dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n    //            //window.location.reload()\r\n    //        })\r\n\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log(err)\r\n    //     })\r\n    //    }\r\n    // },[image])\r\n    // const updatePhoto = (file)=>{\r\n    //     setImage(file)\r\n    // }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n            <div style={{\r\n                margin: \"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-around\",\r\n\r\n                }}>\r\n                    <div>\r\n                        <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                            src={user.user_profile_picture}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"down\">\r\n                        <p></p>\r\n                        {/* <div style=\"padding-top:5em;\"></div> */}\r\n                        <h4>{user.profile_name}</h4>\r\n                        <h7>{user.user_bio}</h7>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                            <h6>727 posts</h6>\r\n                            <h6>{user.user_followers_count} followers</h6>\r\n                            <h6>{user.user_following_count} following</h6>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"file-field input-field\" style={{ margin: \"0px\" }}>\r\n                    <div className=\"btn #64b5f6 blue darken-1\">\r\n                        <span onClick={handleShow}>Update Profile</span>\r\n\r\n                        <Modal show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Update Profile</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                <form>\r\n                                    <textarea\r\n                                        name=\"user_bio\"\r\n                                        placeholder=\"New Bio\"\r\n                                        style={{ width: \"465px\" }}\r\n                                        onChange={handleUpdateUser}\r\n                                    />\r\n                                    <label>Upload New Profile Picture</label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                    />\r\n                                </form>\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <p>{error}</p>\r\n                                <Button variant=\"primary\" onClick={setUserApi}>\r\n                                    Update\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        {/* <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} /> */}\r\n                    </div>\r\n                    {/* <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div> */}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>Post History</p>\r\n                {/* <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} /> */}\r\n            </div>\r\n            <Container style={{ padding: \"25px 50px 75px\" }}>\r\n                <Row>\r\n                    <PostCard postList={posts} />\r\n                </Row>\r\n            </Container>\r\n            <div className=\"gallery\">\r\n                {/* {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               } */}\r\n                <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\" />\r\n                <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\" />\r\n                <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\" />\r\n                {/* <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\"/>  \r\n                <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\"/>  \r\n                <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\"/>  \r\n                <img className=\"item\" src=\"https://static01.nyt.com/images/2019/05/31/multimedia/parenting-poop/22110ba6851840dd9e7d6012a4c6ed32-superJumbo.jpg\" alt=\"post picture\"/>   */}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Profile","import { Container, Row, Image } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nimport { Button } from '@mui/material';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n    Link,\r\n    Outlet\r\n  } from \"react-router-dom\";\r\n\r\nfunction ErrorPage() {\r\n    const image = \"https://i.imgur.com/qhMbkGi.jpg\";\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <h1>ERROR: page not found</h1>\r\n            </Row>\r\n\r\n            <Row style={{justifyContent:\"center\"}}>\r\n                <Image\r\n                    src={image}\r\n                    style={{\r\n                        height:\"300px\",\r\n                        width:\"300px\"\r\n                    }}\r\n                />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Link to=\"/\">\r\n                    <Button>\r\n                        Home\r\n                    </Button>\r\n                </Link>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { useEffect, useState } from 'react';\r\nimport { Container, Card, Row, Image } from 'react-bootstrap';\r\n\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\n\r\nimport ErrorPage from '../ErrorPage';\r\n\r\nimport { getPost } from '../../api/apiRequest';\r\nimport { getRelativeTime } from '../../api/helper';\r\n\r\nfunction Content(props) {\r\n    //if props.type == true then is image \r\n    if (props.type) {\r\n        return (\r\n            <Container>\r\n                <Image\r\n                    src={props.content}\r\n                />\r\n            </Container>\r\n            \r\n        );\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <p>{props.content}</p>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction PostPage(props) {\r\n    /*\r\n        key={post.post_id} \r\n        title={post.post_title}\r\n        content={post.post_content}\r\n        topic={post.post_topic}\r\n        type={post.post_type}\r\n        user={post.user_id}\r\n        anon={post.post_is_anonymous}\r\n        date={post.post_time}\r\n        score={post.post_score}\r\n    */\r\n\r\n    const nullPost = {\r\n        post_topic: \"\",\r\n        post_type: false,\r\n        user_id: \"\",\r\n        post_anon: false,\r\n        post_title: \"Post not found\",\r\n        post_content: \"\",\r\n        post_time: new Date(Date.now()),\r\n        post_score: 0\r\n    }\r\n\r\n    const [post, setPost] = useState(nullPost);\r\n    const [error, setError] = useState(false);\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const errorHandler = (e) => {\r\n        navigate('/post', { replace: true });\r\n        window.location.reload();\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        console.log(props)\r\n        \r\n        getPost(id)\r\n        .then((res) => {\r\n            setPost(res);\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.error(`Error: ${err}`);\r\n            errorHandler();\r\n            setError(true);\r\n        });\r\n        \r\n        //setPost(newPost);\r\n    }, [post]);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        if (error) {\r\n            navigate.push('/');\r\n        }\r\n    })*/\r\n\r\n    return (\r\n        <Container>\r\n            <Card>\r\n                <h1>{post.post_title}</h1>\r\n\r\n                <p style={{margin: 0}}>\r\n                    {\"by \"}\r\n                    <Link to=\"/profile\">{post.user_id}</Link>\r\n                    {\" in \"} \r\n                    <a href=\"#\">{post.post_topic}</a> \r\n                    {\" \" + getRelativeTime(post.post_time)}\r\n                </p>\r\n\r\n                <Content style={{textAlign: \"center\"}} type={post.post_type} content={post.post_content}/>\r\n            </Card>\r\n        </Container>\r\n    )\r\n    \r\n}\r\n\r\nexport default PostPage;","import React, { Component } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = \"/\";\r\n}\r\n\r\nexport default class ProfileSetup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            windows: {\"error\":false, \"valid\":false},\r\n            errormsg: \"\",\r\n            // users: JSON.parse(localStorage.getItem('users')) || [],\r\n            // emails: JSON.parse(localStorage.getItem('emails')) || [],\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //bio\r\n        if (typeof fields[\"bio\"] !== \"undefined\") {\r\n            if (fields[\"bio\"].length > 500) {\r\n                formIsValid = false;\r\n                errors[\"bio\"] = \"First Name is too long\";\r\n            } \r\n        }\r\n\r\n\r\n        //first + last name\r\n        if (!fields[\"firstname\"]) {\r\n            formIsValid = false;\r\n            errors[\"firstname\"] = \"First Name cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"firstname\"] !== \"undefined\") {\r\n            if (fields[\"firstname\"].length < 1) {\r\n                formIsValid = false;\r\n                errors[\"firstname\"] = \"First Name is too short\";\r\n            } else if (fields[\"firstname\"].length > 30) {\r\n                formIsValid = false;\r\n                errors[\"firstname\"] = \"First Name is too long\";\r\n            } else if (!/^([A-Za-z0-9\\-_.]+)$/.test(fields[\"firstname\"])) {\r\n                formIsValid = false;\r\n                errors[\"firstname\"] = \"First Name contains invalid characters\";\r\n            }\r\n        }\r\n\r\n        if (!fields[\"lastname\"]) {\r\n            formIsValid = false;\r\n            errors[\"lastname\"] = \"Last Name cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"lastname\"] !== \"undefined\") {\r\n            if (fields[\"lastname\"].length < 1) {\r\n                formIsValid = false;\r\n                errors[\"lastname\"] = \"Last Name is too short\";\r\n            } else if (fields[\"lastname\"].length > 30) {\r\n                formIsValid = false;\r\n                errors[\"lastname\"] = \"Last Name is too long\";\r\n            } else if (!/^([A-Za-z0-9\\-_.]+)$/.test(fields[\"firstname\"])) {\r\n                formIsValid = false;\r\n                errors[\"lastname\"] = \"Last Name contains invalid characters\";\r\n            }\r\n        }\r\n\r\n        \r\n        this.setState({ errors: errors }, \r\n            function() {\r\n                let errors = this.state.errors;\r\n                let errorStr = \"\";\r\n                for (let error in errors) {\r\n                    errorStr = errorStr + errors[error] + \"\\n\";\r\n                }\r\n\r\n                if (errorStr !== \"\") {\r\n                    alert(errorStr);\r\n                }\r\n            }\r\n        );\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProfileSetup\">\r\n                <Card className=\"LoginCard\" style={{ width: '18rem' }}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h3>Create Profile</h3>\r\n                        <div className=\"form-group\">\r\n                            <label>Bio</label>\r\n                            <textarea refs=\"bio\" type=\"text\" className=\"form-control\" placeholder=\"Tell us about yourself!\" \r\n                            onChange={this.handleChange.bind(this, \"bio\")} value={this.state.fields[\"bio\"]} />\r\n                            {/* <textarea className=\"form-control\" placeholder=\"Tell us about yourself!\"/> */}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Upload a Profile Picture</label>\r\n                            <input refs=\"profilepic\" type=\"file\" required className=\"form-control\" \r\n                            onChange={this.handleChange.bind(this, \"profilepic\")} value={this.state.fields[\"profilepic\"]} />\r\n                            {/* <input type=\"file\"/> */}\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"form-group\">\r\n                            <label>First Name*:</label>\r\n                            <input refs=\"firstname\" type=\"text\" required className=\"form-control\" placeholder=\"Enter First Name\" \r\n                            onChange={this.handleChange.bind(this, \"firstname\")} value={this.state.fields[\"firstname\"]} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Last Name*:</label>\r\n                            <input refs=\"lastname\" type=\"text\" required className=\"form-control\" placeholder=\"Enter Last Name\" \r\n                            onChange={this.handleChange.bind(this, \"lastname\")} value={this.state.fields[\"lastname\"]} />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                        <button className=\"btn btn-primary btn-block\">Create</button>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './App.css';\r\n\r\nimport React from 'react';\r\nimport Home from \"../src/components/Home/Home.js\";\r\nimport SignUp from './components/Signup/SignUp';\r\nimport Login from './components/Login/Login';\r\nimport NavigationBar from './components/Navbar/NavigationBar';\r\nimport Profile from './components/Profile/Profile.js'\r\nimport PostPage from './components/Post/PostPage';\r\nimport ProfileSetup from './components/Profile/ProfileSetup';\r\nimport ErrorPage from './components/ErrorPage';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  Outlet\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        \r\n        <Routes>\r\n          {/* Put pages with navbar here */}\r\n          <Route path=\"/\" element={<LayoutsWithNavbar />}>\r\n            <Route path=\"/\" element={<Home/>}/>\r\n            <Route path=\"/following\" element={<Home/>}/>\r\n            <Route path=\"/messages\" element={<Home/>}/>\r\n            <Route path=\"/profile\" element={<Profile id={0} />}/>\r\n            <Route path=\"/post/:id\" element={<PostPage />}/>\r\n            <Route path=\"*\" element={<ErrorPage />}/>\r\n            <Route path=\"/*/*\" element={<ErrorPage />}/>\r\n          </Route>\r\n          \r\n          {/* Put pages without navbar here */}\r\n          <Route path=\"/login\" element={<Login/>}/>\r\n          <Route path=\"/signup\" element={<SignUp/>}/>\r\n          <Route path=\"/profilesetup\" element={<ProfileSetup/>}/>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LayoutsWithNavbar() {\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <Outlet /> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}